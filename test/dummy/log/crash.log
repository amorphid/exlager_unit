2017-05-20 22:25:56 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.Logger.Supervisor'}
     Context:    child_terminated
     Reason:     normal
     Offender:   [{pid,<0.226.0>},{id,'Elixir.Logger.ErrorHandler'},{mfargs,{'Elixir.Logger.Watcher',watcher,[error_logger,'Elixir.Logger.ErrorHandler',{true,false,500}]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2017-05-21 19:23:36 =CRASH REPORT====
  crasher:
    initial call: application_master:init/4
    pid: <0.229.0>
    registered_name: []
    exception exit: {{bad_return,{{'Elixir.LagerUnit.Application',start,[normal,[]]},{'EXIT',{{badmatch,{'EXIT',{undef,[{'Elixir.LogHandler',init,[[]],[]},{gen_event,server_add_handler,4,[{file,"gen_event.erl"},{line,429}]},{gen_event,handle_msg,5,[{file,"gen_event.erl"},{line,270}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,247}]}]}}},[{'Elixir.LagerUnit.Application',start,2,[{file,"lib/exlager_unit/application.ex"},{line,15}]},{application_master,start_it_old,4,[{file,"application_master.erl"},{line,273}]}]}}}},[{application_master,init,4,[{file,"application_master.erl"},{line,134}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,247}]}]}
    ancestors: [<0.228.0>]
    messages: [{'EXIT',<0.230.0>,normal}]
    links: [<0.228.0>,<0.31.0>]
    dictionary: []
    trap_exit: true
    status: running
    heap_size: 987
    stack_size: 27
    reductions: 145
  neighbours:
2017-05-21 19:24:37 =CRASH REPORT====
  crasher:
    initial call: application_master:init/4
    pid: <0.193.0>
    registered_name: []
    exception exit: {{bad_return,{{'Elixir.LagerUnit.Application',start,[normal,[]]},{'EXIT',{{badmatch,ok},[{'Elixir.LagerUnit.Application',start,2,[{file,"lib/exlager_unit/application.ex"},{line,15}]},{application_master,start_it_old,4,[{file,"application_master.erl"},{line,273}]}]}}}},[{application_master,init,4,[{file,"application_master.erl"},{line,134}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,247}]}]}
    ancestors: [<0.192.0>]
    messages: [{'EXIT',<0.194.0>,normal}]
    links: [<0.192.0>,<0.31.0>]
    dictionary: []
    trap_exit: true
    status: running
    heap_size: 610
    stack_size: 27
    reductions: 129
  neighbours:
2017-05-21 19:28:38 =ERROR REPORT====
** gen_event handler 'Elixir.LagerUnit.LogHandler' crashed.
** Was installed in lager_event
** Last event was: {log,{lager_msg,[],[{pid,<0.31.0>}],info,{["2017",45,"05",45,"21"],["19",58,"28",58,"38",46,"666"]},{1495,420118,666032},[65,112,112,108,105,99,97,116,105,111,110,32,"exlager_unit",32,115,116,97,114,116,101,100,32,111,110,32,110,111,100,101,32,"nonode@nohost"]}}
** When handler state == #{}
** Reason == {#{'__exception__' => true,'__struct__' => 'Elixir.Protocol.UndefinedError',description => <<>>,protocol => 'Elixir.String.Chars',value => {log,{lager_msg,[],[{pid,<0.31.0>}],info,{["2017",45,"05",45,"21"],["19",58,"28",58,"38",46,"666"]},{1495,420118,666032},[65,112,112,108,105,99,97,116,105,111,110,32,"exlager_unit",32,115,116,97,114,116,101,100,32,111,110,32,110,111,100,101,32,"nonode@nohost"]}}},[{'Elixir.String.Chars','impl_for!',1,[{file,"lib/string/chars.ex"},{line,3}]},{'Elixir.String.Chars',to_string,1,[{file,"lib/string/chars.ex"},{line,17}]},{'Elixir.IO',puts,2,[{file,"lib/io.ex"},{line,533}]},{'Elixir.LagerUnit.LogHandler',handle_event,2,[{file,"lib/exlager_unit/log_handler.ex"},{line,15}]},{gen_event,server_update,4,[{file,"gen_event.erl"},{line,533}]},{gen_event,server_notify,4,[{file,"gen_event.erl"},{line,515}]},{gen_event,handle_msg,5,[{file,"gen_event.erl"},{line,256}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,247}]}]}
2017-05-21 19:39:55 =ERROR REPORT====
** gen_event handler 'Elixir.LagerUnit.LogHandler' crashed.
** Was installed in lager_event
** Last event was: {log,{lager_msg,[],[{pid,<0.31.0>}],info,{["2017",45,"05",45,"21"],["19",58,"39",58,"55",46,"193"]},{1495,420795,193515},[65,112,112,108,105,99,97,116,105,111,110,32,"exlager_unit",32,115,116,97,114,116,101,100,32,111,110,32,110,111,100,101,32,"nonode@nohost"]}}
** When handler state == []
** Reason == {'module could not be loaded',[{'Elixir.LogCapturer',capture,[<<"Application exlager_unit started on node nonode@nohost">>],[]},{'Elixir.LagerUnit.LogHandler',handle_event,2,[{file,"lib/exlager_unit/log_handler.ex"},{line,9}]},{gen_event,server_update,4,[{file,"gen_event.erl"},{line,533}]},{gen_event,server_notify,4,[{file,"gen_event.erl"},{line,515}]},{gen_event,handle_msg,5,[{file,"gen_event.erl"},{line,256}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,247}]}]}
2017-05-21 19:42:40 =ERROR REPORT====
** gen_event handler 'Elixir.LagerUnit.LogHandler' crashed.
** Was installed in lager_event
** Last event was: {log,{lager_msg,[],[{pid,<0.31.0>}],info,{["2017",45,"05",45,"21"],["19",58,"42",58,"40",46,"539"]},{1495,420960,539879},[65,112,112,108,105,99,97,116,105,111,110,32,"exlager_unit",32,115,116,97,114,116,101,100,32,111,110,32,110,111,100,101,32,"nonode@nohost"]}}
** When handler state == []
** Reason == {'module could not be loaded',[{'Elixir.LogCapturer',capture,[<<"Application exlager_unit started on node nonode@nohost">>],[]},{'Elixir.LagerUnit.LogHandler',handle_event,2,[{file,"lib/exlager_unit/log_handler.ex"},{line,9}]},{gen_event,server_update,4,[{file,"gen_event.erl"},{line,533}]},{gen_event,server_notify,4,[{file,"gen_event.erl"},{line,515}]},{gen_event,handle_msg,5,[{file,"gen_event.erl"},{line,256}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,247}]}]}
2017-05-21 19:45:44 =ERROR REPORT====
** gen_event handler 'Elixir.LagerUnit.LogHandler' crashed.
** Was installed in lager_event
** Last event was: {log,{lager_msg,[],[{pid,<0.31.0>}],info,{["2017",45,"05",45,"21"],["19",58,"45",58,"44",46,"994"]},{1495,421144,994342},[65,112,112,108,105,99,97,116,105,111,110,32,"exlager_unit",32,115,116,97,114,116,101,100,32,111,110,32,110,111,100,101,32,"nonode@nohost"]}}
** When handler state == []
** Reason == {'module could not be loaded',[{'Elixir.LogCapturer',capture,[<<"Application exlager_unit started on node nonode@nohost">>],[]},{'Elixir.LagerUnit.LogHandler',handle_event,2,[{file,"lib/exlager_unit/log_handler.ex"},{line,9}]},{gen_event,server_update,4,[{file,"gen_event.erl"},{line,533}]},{gen_event,server_notify,4,[{file,"gen_event.erl"},{line,515}]},{gen_event,handle_msg,5,[{file,"gen_event.erl"},{line,256}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,247}]}]}
2017-05-21 19:46:51 =ERROR REPORT====
** Generic server 'Elixir.LagerUnit.LogCapturer' terminating 
** Last message in was {'$gen_cast',{capture,<<"Application exlager_unit started on node nonode@nohost">>}}
** When Server state == #{}
** Reason for termination == 
** {bad_return_value,{ok,#{}}}
2017-05-21 19:46:51 =CRASH REPORT====
  crasher:
    initial call: Elixir.LagerUnit.LogCapturer:init/1
    pid: <0.196.0>
    registered_name: 'Elixir.LagerUnit.LogCapturer'
    exception exit: {{bad_return_value,{ok,#{}}},[{gen_server,terminate,7,[{file,"gen_server.erl"},{line,812}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,247}]}]}
    ancestors: ['Elixir.LagerUnit.Supervisor',<0.194.0>]
    messages: [{'$gen_cast',{capture,<<"Application exlager started on node nonode@nohost">>}},{'$gen_cast',{capture,<<"Application dummy started on node nonode@nohost">>}}]
    links: [<0.195.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 233
    stack_size: 27
    reductions: 401
  neighbours:
2017-05-21 19:46:51 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.LagerUnit.Supervisor'}
     Context:    child_terminated
     Reason:     {bad_return_value,{ok,#{}}}
     Offender:   [{pid,<0.196.0>},{id,'Elixir.LagerUnit.LogCapturer'},{mfargs,{'Elixir.LagerUnit.LogCapturer',start_link,[]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2017-05-21 19:46:51 =ERROR REPORT====
** Generic server 'Elixir.LagerUnit.LogCapturer' terminating 
** Last message in was {'$gen_cast',{capture,<<"gen_server 'Elixir.LagerUnit.LogCapturer' terminated with reason: bad return value: {ok,#{}}">>}}
** When Server state == #{}
** Reason for termination == 
** {bad_return_value,{ok,#{}}}
2017-05-21 19:46:51 =CRASH REPORT====
  crasher:
    initial call: Elixir.LagerUnit.LogCapturer:init/1
    pid: <0.200.0>
    registered_name: 'Elixir.LagerUnit.LogCapturer'
    exception exit: {{bad_return_value,{ok,#{}}},[{gen_server,terminate,7,[{file,"gen_server.erl"},{line,812}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,247}]}]}
    ancestors: ['Elixir.LagerUnit.Supervisor',<0.194.0>]
    messages: []
    links: [<0.195.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 987
    stack_size: 27
    reductions: 507
  neighbours:
2017-05-21 19:46:51 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.LagerUnit.Supervisor'}
     Context:    child_terminated
     Reason:     {bad_return_value,{ok,#{}}}
     Offender:   [{pid,<0.200.0>},{id,'Elixir.LagerUnit.LogCapturer'},{mfargs,{'Elixir.LagerUnit.LogCapturer',start_link,[]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2017-05-21 19:46:51 =ERROR REPORT====
** Generic server 'Elixir.LagerUnit.LogCapturer' terminating 
** Last message in was {'$gen_cast',{capture,<<"CRASH REPORT Process 'Elixir.LagerUnit.LogCapturer' with 0 neighbours exited with reason: bad return value: {ok,#{}} in gen_server:terminate/7 line 812">>}}
** When Server state == #{}
** Reason for termination == 
** {bad_return_value,{ok,#{}}}
2017-05-21 19:46:51 =CRASH REPORT====
  crasher:
    initial call: Elixir.LagerUnit.LogCapturer:init/1
    pid: <0.201.0>
    registered_name: 'Elixir.LagerUnit.LogCapturer'
    exception exit: {{bad_return_value,{ok,#{}}},[{gen_server,terminate,7,[{file,"gen_server.erl"},{line,812}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,247}]}]}
    ancestors: ['Elixir.LagerUnit.Supervisor',<0.194.0>]
    messages: []
    links: [<0.195.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 987
    stack_size: 27
    reductions: 751
  neighbours:
2017-05-21 19:46:51 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.LagerUnit.Supervisor'}
     Context:    child_terminated
     Reason:     {bad_return_value,{ok,#{}}}
     Offender:   [{pid,<0.201.0>},{id,'Elixir.LagerUnit.LogCapturer'},{mfargs,{'Elixir.LagerUnit.LogCapturer',start_link,[]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2017-05-21 19:46:51 =ERROR REPORT====
** Generic server 'Elixir.LagerUnit.LogCapturer' terminating 
** Last message in was {'$gen_cast',{capture,<<"Supervisor 'Elixir.LagerUnit.Supervisor' had child 'Elixir.LagerUnit.LogCapturer' started with 'Elixir.LagerUnit.LogCapturer':start_link() at <0.196.0> exit with reason bad return value: {ok,#{}} in context child_terminated">>}}
** When Server state == #{}
** Reason for termination == 
** {bad_return_value,{ok,#{}}}
2017-05-21 19:46:51 =CRASH REPORT====
  crasher:
    initial call: Elixir.LagerUnit.LogCapturer:init/1
    pid: <0.203.0>
    registered_name: 'Elixir.LagerUnit.LogCapturer'
    exception exit: {{bad_return_value,{ok,#{}}},[{gen_server,terminate,7,[{file,"gen_server.erl"},{line,812}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,247}]}]}
    ancestors: ['Elixir.LagerUnit.Supervisor',<0.194.0>]
    messages: []
    links: [<0.195.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 987
    stack_size: 27
    reductions: 1001
  neighbours:
2017-05-21 19:46:51 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.LagerUnit.Supervisor'}
     Context:    child_terminated
     Reason:     {bad_return_value,{ok,#{}}}
     Offender:   [{pid,<0.203.0>},{id,'Elixir.LagerUnit.LogCapturer'},{mfargs,{'Elixir.LagerUnit.LogCapturer',start_link,[]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2017-05-21 19:46:51 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.LagerUnit.Supervisor'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.203.0>},{id,'Elixir.LagerUnit.LogCapturer'},{mfargs,{'Elixir.LagerUnit.LogCapturer',start_link,[]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2017-05-21 19:48:27 =ERROR REPORT====
** Generic server 'Elixir.LagerUnit.LogCapturer' terminating 
** Last message in was {'$gen_cast',{capture,<<"Application exlager_unit started on node nonode@nohost">>}}
** When Server state == #{}
** Reason for termination == 
** {bad_return_value,{ok,#{}}}
2017-05-21 19:48:28 =CRASH REPORT====
  crasher:
    initial call: Elixir.LagerUnit.LogCapturer:init/1
    pid: <0.186.0>
    registered_name: 'Elixir.LagerUnit.LogCapturer'
    exception exit: {{bad_return_value,{ok,#{}}},[{gen_server,terminate,7,[{file,"gen_server.erl"},{line,812}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,247}]}]}
    ancestors: ['Elixir.LagerUnit.Supervisor',<0.184.0>]
    messages: [{'$gen_cast',{capture,<<"Application exlager started on node nonode@nohost">>}},{'$gen_cast',{capture,<<"Application dummy started on node nonode@nohost">>}}]
    links: [<0.185.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 233
    stack_size: 27
    reductions: 399
  neighbours:
2017-05-21 19:48:28 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.LagerUnit.Supervisor'}
     Context:    child_terminated
     Reason:     {bad_return_value,{ok,#{}}}
     Offender:   [{pid,<0.186.0>},{id,'Elixir.LagerUnit.LogCapturer'},{mfargs,{'Elixir.LagerUnit.LogCapturer',start_link,[]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2017-05-21 19:48:28 =ERROR REPORT====
** Generic server 'Elixir.LagerUnit.LogCapturer' terminating 
** Last message in was {'$gen_cast',{capture,<<"CRASH REPORT Process 'Elixir.LagerUnit.LogCapturer' with 0 neighbours exited with reason: bad return value: {ok,#{}} in gen_server:terminate/7 line 812">>}}
** When Server state == #{}
** Reason for termination == 
** {bad_return_value,{ok,#{}}}
2017-05-21 19:48:28 =CRASH REPORT====
  crasher:
    initial call: Elixir.LagerUnit.LogCapturer:init/1
    pid: <0.190.0>
    registered_name: 'Elixir.LagerUnit.LogCapturer'
    exception exit: {{bad_return_value,{ok,#{}}},[{gen_server,terminate,7,[{file,"gen_server.erl"},{line,812}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,247}]}]}
    ancestors: ['Elixir.LagerUnit.Supervisor',<0.184.0>]
    messages: []
    links: [<0.185.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 987
    stack_size: 27
    reductions: 735
  neighbours:
2017-05-21 19:48:28 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.LagerUnit.Supervisor'}
     Context:    child_terminated
     Reason:     {bad_return_value,{ok,#{}}}
     Offender:   [{pid,<0.190.0>},{id,'Elixir.LagerUnit.LogCapturer'},{mfargs,{'Elixir.LagerUnit.LogCapturer',start_link,[]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2017-05-21 19:48:28 =ERROR REPORT====
** Generic server 'Elixir.LagerUnit.LogCapturer' terminating 
** Last message in was {'$gen_cast',{capture,<<"Supervisor 'Elixir.LagerUnit.Supervisor' had child 'Elixir.LagerUnit.LogCapturer' started with 'Elixir.LagerUnit.LogCapturer':start_link() at <0.186.0> exit with reason bad return value: {ok,#{}} in context child_terminated">>}}
** When Server state == #{}
** Reason for termination == 
** {bad_return_value,{ok,#{}}}
2017-05-21 19:48:28 =CRASH REPORT====
  crasher:
    initial call: Elixir.LagerUnit.LogCapturer:init/1
    pid: <0.191.0>
    registered_name: 'Elixir.LagerUnit.LogCapturer'
    exception exit: {{bad_return_value,{ok,#{}}},[{gen_server,terminate,7,[{file,"gen_server.erl"},{line,812}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,247}]}]}
    ancestors: ['Elixir.LagerUnit.Supervisor',<0.184.0>]
    messages: []
    links: [<0.185.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 987
    stack_size: 27
    reductions: 1001
  neighbours:
2017-05-21 19:48:28 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.LagerUnit.Supervisor'}
     Context:    child_terminated
     Reason:     {bad_return_value,{ok,#{}}}
     Offender:   [{pid,<0.191.0>},{id,'Elixir.LagerUnit.LogCapturer'},{mfargs,{'Elixir.LagerUnit.LogCapturer',start_link,[]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2017-05-21 19:48:28 =ERROR REPORT====
** Generic server 'Elixir.LagerUnit.LogCapturer' terminating 
** Last message in was {'$gen_cast',{capture,<<"gen_server 'Elixir.LagerUnit.LogCapturer' terminated with reason: bad return value: {ok,#{}}">>}}
** When Server state == #{}
** Reason for termination == 
** {bad_return_value,{ok,#{}}}
2017-05-21 19:48:28 =CRASH REPORT====
  crasher:
    initial call: Elixir.LagerUnit.LogCapturer:init/1
    pid: <0.192.0>
    registered_name: 'Elixir.LagerUnit.LogCapturer'
    exception exit: {{bad_return_value,{ok,#{}}},[{gen_server,terminate,7,[{file,"gen_server.erl"},{line,812}]},{proc_lib,init_p_do_apply,3,[{file,"proc_lib.erl"},{line,247}]}]}
    ancestors: ['Elixir.LagerUnit.Supervisor',<0.184.0>]
    messages: []
    links: [<0.185.0>]
    dictionary: []
    trap_exit: false
    status: running
    heap_size: 987
    stack_size: 27
    reductions: 503
  neighbours:
2017-05-21 19:48:28 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.LagerUnit.Supervisor'}
     Context:    child_terminated
     Reason:     {bad_return_value,{ok,#{}}}
     Offender:   [{pid,<0.192.0>},{id,'Elixir.LagerUnit.LogCapturer'},{mfargs,{'Elixir.LagerUnit.LogCapturer',start_link,[]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

2017-05-21 19:48:28 =SUPERVISOR REPORT====
     Supervisor: {local,'Elixir.LagerUnit.Supervisor'}
     Context:    shutdown
     Reason:     reached_max_restart_intensity
     Offender:   [{pid,<0.192.0>},{id,'Elixir.LagerUnit.LogCapturer'},{mfargs,{'Elixir.LagerUnit.LogCapturer',start_link,[]}},{restart_type,permanent},{shutdown,5000},{child_type,worker}]

